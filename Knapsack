#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

struct Item
{
    int weight, profit;
    double ratio;
};

bool compare(Item a, Item b)
{
    return a.ratio > b.ratio;
}

double knapsack(int capacity, vector<Item> items)
{
    for (auto &item : items)
        item.ratio = (double)item.profit / item.weight;
    sort(items.begin(), items.end(), compare);

    double totalProfit = 0;
    for (auto &item : items)
    {
        if (capacity >= item.weight)
        {
            totalProfit += item.profit;
            capacity -= item.weight;
        }
        else
        {
            totalProfit += item.profit * ((double)capacity / item.weight);
            break;
        }
    }
    return totalProfit;
}

int main()
{
    int n;
    cout << "Enter the number of items: ";
    cin >> n;

    vector<Item> items(n);
    cout << "Enter the weight and profit of each item:" << endl;
    for (int i = 0; i < n; i++)
    {
        cout << "Item " << i + 1 << ": ";
        cin >> items[i].weight >> items[i].profit;
    }

    int capacity;
    cout << "Enter the knapsack capacity: ";
    cin >> capacity;

    cout << "Maximum profit: " << knapsack(capacity, items) << endl;

    return 0;
}
